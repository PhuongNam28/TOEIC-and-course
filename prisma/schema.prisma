

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid()) @map("_id")
  username    String
  email       String       @unique
  profilePic  String
  clerkUserId String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  quizResults QuizResult[]
  answers     UserAnswer[] // Thêm dòng này
}

model Admin {
  id          String       @id @default(cuid()) @map("_id")
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model QuizResult {
  id             String   @id @default(cuid()) @map("_id")
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  quizScore      Int
  correctAnswers Int
  wrongAnswers   Int
  createdAt      DateTime @default(now())
}

model Exam {
  id          String       @id @default(cuid()) @map("_id")
  title       String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
// Quan hệ với các phần câu hỏi
  part1s QuestionPart1[]
  part2s QuestionPart2[]
  part3s QuestionPart3[]
  part4s QuestionPart4[]
  part5s QuestionPart5[]
  part6s QuestionPart6[]
  part7s QuestionPart7[]
}



model QuestionPart1 {
  id             String      @id @default(cuid()) @map("_id")
  audioFile      String   
  imageFile      String   
  answer1        String
  answer2        String
  answer3        String
  answer4        String
  correctAnswer  String      // Đáp án đúng
  explainAnswer  String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  examId        String

  Exam Exam? @relation(fields: [examId], references: [id], onDelete: Cascade)
  @@index([examId])
   userAnswers    UserAnswer[] @relation(name: "RelationToQuestionPart1")
}

model QuestionPart2 {
  id             String      @id @default(cuid()) @map("_id")
  questionText   String
  audioFile      String      
  answer1        String
  answer2        String
  answer3        String
  correctAnswer  String      // Đáp án đúng
  explainAnswer  String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  examId        String

  Exam Exam? @relation(fields: [examId], references: [id], onDelete: Cascade)
  @@index([examId])
   userAnswers    UserAnswer[] @relation(name: "RelationToQuestionPart2")
}

model QuestionPart3 {
  id             String      @id @default(cuid()) @map("_id")
  questionText   String
  audioFile      String
  imageFile      String     
  answer1        String
  answer2        String
  answer3        String
  answer4        String
  correctAnswer  String      // Đáp án đúng
  explainAnswer  String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  examId        String

  Exam Exam? @relation(fields: [examId], references: [id], onDelete: Cascade)
  @@index([examId])
   userAnswers    UserAnswer[] @relation(name: "RelationToQuestionPart3")
}

model QuestionPart4 {
  id             String      @id @default(cuid()) @map("_id")
  questionText   String
  audioFile      String   
  imageFile      String   
  answer1        String
  answer2        String
  answer3        String
  answer4        String
  correctAnswer  String      // Đáp án đúng
  explainAnswer  String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  examId        String

  Exam Exam? @relation(fields: [examId], references: [id], onDelete: Cascade)
  @@index([examId])
   userAnswers    UserAnswer[] @relation(name: "RelationToQuestionPart4")
}

model QuestionPart5 {
  id             String      @id @default(cuid()) @map("_id")
  questionText   String  
  answer1        String
  answer2        String
  answer3        String
  answer4        String
  correctAnswer  String      // Đáp án đúng
  explainAnswer  String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  examId        String

  Exam Exam? @relation(fields: [examId], references: [id], onDelete: Cascade)
  @@index([examId])
   userAnswers    UserAnswer[] @relation(name: "RelationToQuestionPart5")
}

model QuestionPart6 {
  id             String      @id @default(cuid()) @map("_id") 
  imageFile      String  
  answer1        String
  answer2        String
  answer3        String
  answer4        String
  correctAnswer  String      // Đáp án đúng
  explainAnswer  String

  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  examId        String

  Exam Exam? @relation(fields: [examId], references: [id], onDelete: Cascade)
  @@index([examId])
   userAnswers    UserAnswer[] @relation(name: "RelationToQuestionPart6")
}

model QuestionPart7 {
  id             String      @id @default(cuid()) @map("_id")
  
  imageFile      String 
  answer1        String
  answer2        String
  answer3        String
  answer4        String
  correctAnswer  String      // Đáp án đúng
  explainAnswer  String





  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  examId        String

  Exam Exam? @relation(fields: [examId], references: [id], onDelete: Cascade)
  @@index([examId])
   userAnswers    UserAnswer[] @relation(name: "RelationToQuestionPart7")
}

model UserAnswer {
  id                String         @id @default(cuid()) @map("_id")
  user              User           @relation(fields: [userId], references: [id])
  userId            String
  questionPart1Id   String?
  questionPart2Id   String?
  questionPart3Id   String?
  questionPart4Id   String?
  questionPart5Id   String?
  questionPart6Id   String?
  questionPart7Id   String?
  
  questionPart1     QuestionPart1? @relation(fields: [questionPart1Id], references: [id], name: "RelationToQuestionPart1")
  questionPart2     QuestionPart2? @relation(fields: [questionPart2Id], references: [id], name: "RelationToQuestionPart2")
  questionPart3     QuestionPart3? @relation(fields: [questionPart3Id], references: [id], name: "RelationToQuestionPart3")
  questionPart4     QuestionPart4? @relation(fields: [questionPart4Id], references: [id], name: "RelationToQuestionPart4")
  questionPart5     QuestionPart5? @relation(fields: [questionPart5Id], references: [id], name: "RelationToQuestionPart5")
  questionPart6     QuestionPart6? @relation(fields: [questionPart6Id], references: [id], name: "RelationToQuestionPart6")
  questionPart7     QuestionPart7? @relation(fields: [questionPart7Id], references: [id], name: "RelationToQuestionPart7")

  selectedOption    String
  isCorrect         Boolean
  createdAt         DateTime        @default(now())
}
